//support class's weapons

//Proximity sensor layer

//Another emergency development in response to the threat, the proximity sensor
//technology was based off of the already existing technology for the M67 mine-
//complete with launcher-arming system. The proximity sensor went through
//a small improvement, picking up on perturbations in an electromagnetic field
//to determine the presence of the threat- creating nearly no risk of the sensor
//being found beforehand. In the presence of a target, the sensor beeps loudly
//and flashes, indicating its operator of the location of the threat.

actor proxsensors : doomweapon
{
	Weapon.ammoUse 1
	Weapon.ammoType "Sensors"
	Weapon.selectionOrder 5000
	tag "$TAG_SENSOR"
	Inventory.icon "SENPA0"
	states
	{
		select:
			SENL A 0 A_Raise
			SENL A 1 A_Raise
			loop
		deselect:
			SENL A 0 A_Lower
			SENL A 1 A_Lower
			loop
		ready:
			SENL A 1 A_WeaponReady
			loop
		fire:
			SENL B 8
			SENL C 3 A_FireCustomMissile("FlyingProxSensor",0,1)
			SENL D 6
			SENL B 3
			SENL A 5
			goto ready
	}
}

Actor FlyingProxSensor
{
	damage 3
	SeeSound "weapons/sensorgun"
	radius 4
	height 7
	projectile
	speed 20
	-nogravity
	obituary "$OB_SENSOR"
	states
	{
		spawn:
			TNT1 A 0 NoDelay ACS_NamedExecuteWithResult("SetFreeTid")
			fly:
			SENS C 0 A_SpawnItemEx("GrenadeSmokeTrail") 
			SENS CCCC 1 ACS_NamedExecuteWithResult("waterdie")
			loop
		waterdie:
		die:
			TNT1 A 0 A_Stop
			TNT1 A 0 A_ChangeFlag("Missile",false)
		death:
			SENS C 1 A_SpawnItemEx("ProxSensor",0,0,0,0,0,0,0,SXF_CLEARCALLERTID,0,tid)
			stop
	}
}

Actor ProxSensor : Equipment
{
	radius 4
	height 7
	speed 0
	+lookallaround
	+ismonster //this is required because fuck you
	+friendly
	+nogravity
	+skyexplode
	+shootable
	+seeinvisible
	damageFactor "Dark", 0.15
	damageFactor "Darken", 1
	deathSound "misc/proxdie"
	states
	{
		spawn:
			SENS C 1 NoDelay ACS_NamedExecuteWithResult("EquipmentUseSpecial")
			SENS CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC 1 A_GiveInventory("funcSensorTick",1) //ACS_NamedExecuteWithResult("waterfloat",20)//34 c
			SENS D 1 Bright A_PlaySound("misc/prox")
			SENS D 1 Bright A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",20)
			SENS C 1 A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",20)
			SENS D 1 Bright A_PlaySound("misc/prox")
			SENS D 1 Bright A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",20)
			SENS C 1 A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",20)
		lookloop:
			TNT1 A 0 A_TakeInventory("Clip",1)
			TNT1 A 0 A_ClearTarget
			TNT1 A 0 A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",20)
			TNT1 A 0 A_LookEx(LOF_NOSOUNDCHECK | LOF_DONTCHASEGOAL,0,64,0,360)
			TNT1 A 0 ACS_NamedExecuteWithResult("waterfloat",20)
			SENS C 1 A_LookEx(LOF_NOSOUNDCHECK | LOF_DONTCHASEGOAL,0,128,0,360)
			SENS CCC 1 ACS_NamedExecuteWithResult("waterfloat",20)
			TNT1 A 0 A_JumpIf(CallACS("friendplayerexists")==0,"die") //remove if player left game
			loop
		see:
			TNT1 A 0 A_JumpIfCloser(128,"detect")
			goto forget
		detect:
			TNT1 A 0 A_JumpIfInventory("Clip",1,"lookloop")
			TNT1 A 0 A_GiveInventory("funcSensorTick",1) //ACS_NamedExecuteWithResult("waterfloat",20)
			SENS D 1 Bright A_PlaySound("misc/prox")
			SENS D 1 Bright ACS_NamedExecuteWithResult("waterfloat",20)
			SENS C 0 Bright ACS_NamedExecuteWithResult("waterfloat",20)
			SENS C 1 A_ClearTarget
			SENS C 1 ACS_NamedExecuteWithResult("waterfloat",20)
			goto lookloop
		forget:
			SENS C 0 A_ClearTarget
			SENS CCCC 1 A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",20)
			goto lookloop
		picked:
			TNT1 A 0 A_GiveToTarget("PickedSensor",1)
			stop
		die:
			SENS F 1 A_Die
		death:
			SENS F 2 A_Scream
			SENS E 6 A_GiveInventory("funcSensorTick",1) //ACS_NamedExecuteWithResult("waterfloat",10)
			SENS F 2 ACS_NamedExecuteWithResult("waterfloat",5)
			SENS E 6 A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",10)
			SENS F 2 ACS_NamedExecuteWithResult("waterfloat",5)
			SENS E 8 A_GiveInventory("funcSensorTick",1)//ACS_NamedExecuteWithResult("waterfloat",10)
			SENS F 2 ACS_NamedExecuteWithResult("waterfloat",5)
			xd:
			SENS F 0 A_GiveInventory("funcSensorTick",1)
			SENS E 5 A_FadeOut(0.1)
			wait
		death.darken:
		xdeath:
			SENS E 15 A_PlaySound("misc/proxxdie")
			goto xd
		death.grenade:
			stop
	}
}

Actor ProxSensorWallStickChecker
{
	damage 0
	speed 0
	projectile
	radius 8
	height 4
	+thruactors
	+nointeraction
	states
	{
		spawn:
			TNT1 A 1
			TNT1 A 1 A_GiveToTarget("Indicator")
			stop
		death:
			TNT1 A 1
			stop
	}
}

Actor funcSensorTick : CustomInventory
{
	+Inventory.AlwaysPickup
	States
	{
		Pickup:
			TNT1 A 0 ACS_NamedExecuteWithResult("waterfloat",20)
			TNT1 A 0 A_JumpIfInventory("Indicator",0,2)
			TNT1 A 0 A_CustomMissile("ProxSensorWallStickChecker",3,0,0,CMF_AIMDIRECTION)
			stop
			TNT1 A 0 A_ChangeFlag("nogravity",0)
			stop
	}
}

Actor PickedSensor : CustomInventory
{
	+Inventory.AlwaysPickup
	States
	{
		Pickup:
			TNT1 A 0 A_GiveInventory("Sensors",1)
			TNT1 A 0 A_SpawnItemEx("FakePickedSensor",0,0,0,0,0,0)
			TNT1 A 0 A_Recoil(-0.1)
			stop
	}
}

Actor FakePickedSensor : CustomInventory
{
	Inventory.PickupMessage "$GOTSENSOR"
	+Inventory.AlwaysPickup
	States
	{
		Spawn:
			TNT1 A 35
			stop
		Pickup:
			TNT1 A 0 A_RailWait
			stop
	}
}


//but of course, just how useful would a shield be without a sword?
actor AssaultShotgun : DoomWeapon
{
	//attacksound "weapons/assaultshotgun"
	decal "bulletchip"
	Inventory.icon "SGPPA0"
	Weapon.ammoType "usShell"
	Weapon.ammoUse 1
	Weapon.Kickback 20
	tag "$TAG_ASSAULTSHOTGUN"
	obituary "$OB_ASSAULTSHOTGUN"
	+Weapon.noAutoFire
	states
	{
		select:
			ASHT A 0 A_Raise
			ASHT A 1 A_Raise
			loop
		deselect:
			ASHT A 0 A_Lower
			ASHT A 1 A_Lower
			loop
		ready:
			ASHT A 0 A_JumpIf(args[0]!=1,"inspect")
			ASHT A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			wait
		fire:
			//ASHT A 1
			ASHF A 0 A_ZoomFactor(1.005,ZOOM_NOSCALETURNING)
			ASHF A 0 A_PlaySound("weapons/assaultshotgun",CHAN_WEAPON)
			ASHF A 0 A_PlaySound("weapons/assaultshotgundist",CHAN_5)
			ASHF A 0 A_FireBullets(1,1,1,4,"ShotgunPuff",0) //accuslug
			ASHF A 0 A_Light(7)
			ASHF A 1 Bright A_FireBullets(7.1,3.75,6,4)
			ASHF A 0 A_FireCustomMissile("12gCaseSpawner",0,0)
			ASHF B 1 Bright A_Light2
			ASHF A 0 A_ZoomFactor(1)
			ASHF CDE 3 A_Light0
			ASHF A 0 A_ZoomFactor(1)
			ASHF D 0 A_WeaponReady(WRF_NOBOB)
			ASHT AAAA 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRElOAD)
			goto ready
		inspect:
			ASHT A 0 A_SetArg(0,1)
			ASHT A 5 A_SetTics(random(4,10))
			reload:
			ASHT BCDE 2
			ASHT F 1 A_PlaySound("weapons/assaultshotgunpump",CHAN_BODY)
			ASHT GHIHG 1
			ASHT FEDCB 2
			goto ready
	}
}

actor ShotgunPuff : BulletPuff //more knockback
{
	projectileKickback 100
	+puffGetsOwner
	+puffOnActors
	states
	{
  Spawn:
    PUFF A 4 Bright
    PUFF B 4
    // Intentional fall-through
  Melee:
    PUFF CD 4
    Stop
  }
}

actor 12gCase : CaseBase
{
	scale 0.5
	bounceSound "weapons/shotgun/casebounce"
	states
	{
		spawn:
			CAS2 F 0 NoDelay ACS_NamedExecuteWithResult("attachcasingsteamer")
			CAS2 F 3 A_Jump(256,"xloop","yloop","zloop")
		xloop:
			CAS2 FGHABCDE 3
			loop
		yloop:
			CAS2 FGHABCDE 2
			loop
		zloop:
			CAS2 FGHABCDE 1
			loop
		death:
			CAS2 C 1 A_Jump(256,"d1","d2")
		d1:
			CAS2 C 1
			goto bedead
		d2:
			CAS2 G 1
			goto bedead
	}
}

actor 12gCaseSpawner : CaseSpawnerBase
{
	speed 8
	states
	{
		spawn:
			TNT1 A 0 NoDelay A_Stop
			TNT1 A 0 ACS_NamedExecuteWithResult("inherittargvel")
			TNT1 A 1 A_SpawnItemEx("12gCase",0,0,0,5*cos(angle-100) + velx *1.1 + frandom(-1,1),5*sin(angle-100) + vely*1.1 + frandom(-1,1),frandom(2,4) + velz,0,SXF_ABSOLUTEVELOCITY)
			stop
	}
}

actor 12gCaseSpawner2 : CaseSpawnerBase
{
	speed 4
	states
	{
		spawn:
			TNT1 A 0 NoDelay A_Stop
			TNT1 A 0 ACS_NamedExecuteWithResult("inherittargvel")
			TNT1 A 1 A_SpawnItemEx("12gCase",0,0,2
			,2*cos(angle-90) + 7*sin(70-pitch)*cos(angle) + velx *1.1 + frandom(-1,1) //x component
			,2*sin(angle-90) + 7*sin(70-pitch)*sin(angle) + vely*1.1 + frandom(-1,1) //y component
			,7*sin(-20-pitch)+ frandom(-1,1) + velz, //z component
			0,SXF_ABSOLUTEVELOCITY)
			stop
	}
}



